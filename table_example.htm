<html>
<head>
	<title>Testing</title>
	<style>
		.t07-center {
			text-align: center;
		}
		.t07-center>div { /* N.B. child combinators don't work in IE7 or less */
			display: inline-block;
		}
		.t07-table-above{
			background-color:#dddddd;
			padding:10px 0;
		}
		.cubee a{
			text-decoration:none;
		}
		.cubee a:hover{
			text-decoration:underline;
		}
		.cubee th a:hover{
			text-decoration:none;
		}
		.cubee table{
			width:100%;
		}
		.cubee table td, .cubee table th{
			border:1px solid #cccccc;
		}
		.cubee-table-filter-title span{
			font-size:120%;
		}
		.cubee-model{
			display:none;
		}
		.cubee-action{
			cursor:pointer;
		}
	</style>
	<script src="http://code.jquery.com/jquery-2.1.4.min.js"></script>
	<script src="js/Http.js"></script>
</head>
<body>
	<br />
	
	<!--
	<iframe src="http://localhost:8080/admin-deploy" style="width:90%;height:600px;"></iframe>
	-->
	
	<div id="toto" class="cubee"></div>
	<br />
	<hr /><hr />
	<br />
	<table class="t07-table">
		<tr>
			<th>Id</th>
			<th>Label</th>
		</tr>
		<tr>
			<td align="center" colspan="2">No result.</td>
		</tr>
	</table>
	<br />
</body>
<script>
	"use strict";
	/** this way we can set pure javascript, or enhance the HTML */
	var columnList = ['col1', 'col2', 'col3'];
	var options = {
		columnList: columnList
	};
	var stdTable = function(idDiv, options){
		
		var tableElem = document.createElement('table');
		tableElem.className = 'cubee';
		var trElem = document.createElement('tr');
		var htmlColumnList = new Array();
		for(var i=0; i<options.columnList.length; i++){
			var colElem = document.createElement('col');
			$(colElem).attr('style', 'width:30%');
			tableElem.appendChild(colElem);
			var thElem = document.createElement('th');
			var $thElem = $(thElem);
			$thElem.html(options.columnList[i]);
			var $a = $('<a href="#">&squf;</a>');
			$a.orderby = 0;
			$a.fieldId = i;
			htmlColumnList.push($a);
			$thElem.append($a);
			trElem.appendChild(thElem);
		}
		tableElem.appendChild(trElem);
		//---------td 'no row'----------------//
		var tdBodyElem = document.createElement('tbody');
		trElem = document.createElement('tr');
		var tdNoRowElem = document.createElement('td');
		var $tdNoRowElem = $(tdNoRowElem);
		$tdNoRowElem.attr('colspan', options.columnList.length).attr('align', 'center');
		$tdNoRowElem.html('no result');
		trElem.appendChild(tdNoRowElem);
		tdBodyElem.appendChild(trElem);
		tableElem.appendChild(tdBodyElem);
		//----------------------------------//
		var divElem = document.getElementById(idDiv);
		divElem.appendChild(tableElem);
		$(tableElem).jStdTable('http://opendata.paris.fr/api/records/1.0/search?dataset=troncon_voie', htmlColumnList);
		
		this.createFilter = function(p1){
			console.log('TODO: create filters with param: ' + p1);
		}
	};
	
	var stdTableFilter = function(){
	
		var me = this;
		/////	span filter		/////
		var spanAddFilter = $('<span class="cubee-action">+</span>');
		spanAddFilter.on('click', function(){
			var thisElem = $(this);
			console.log('##thisElem', me.spanAddFilter.nbFilterElem);
			if(null == me.spanAddFilter.nbFilterElem){
				me.spanAddFilter.nbFilterElem = 0;
			}
			if(0 == me.spanAddFilter.nbFilterElem){
				me.boutonSendFilter.show();
			}
			me.spanAddFilter.nbFilterElem = me.spanAddFilter.nbFilterElem + 1;
			var parent = thisElem.parents('div.cubee-table-filter');
			var divModel = parent.children('div.cubee-model');
			Http.copyModel(divModel, parent, function(newDiv){
				var spanDeleteLine = $('<span class="cubee-action"> X </span>');
				spanDeleteLine.on('click', function(){
					newDiv.remove();
					me.spanAddFilter.nbFilterElem = me.spanAddFilter.nbFilterElem - 1;
					if(0 == me.spanAddFilter.nbFilterElem){
						me.boutonSendFilter.hide();
					}
				});
				newDiv.append(spanDeleteLine);
			});
		});
		this.spanAddFilter = spanAddFilter;
		
		/////	bouton post filter	/////
		var boutonSendFilter = $('<input type="submit" />');
		boutonSendFilter.hide();
		this.boutonSendFilter = boutonSendFilter;
	};
	
	/**
	 * @param urlGet The url used to retreive json data
	*/
	$.fn.jStdTable = function(urlGet, htmlColumnList) {
				
		var jsonResultKey = 'records';
		var thisTable = this;
		thisTable.currentPage = 1;
		thisTable.orderByList = new Array();
		
		var html = '<form>'
				+ '<div class="cubee t07-table-above" style="width:90%;">'
				+ 	'<div class="cubee-table-filter">'
				+	'	<div class="cubee-table-filter-title">Filtres </div>'
				+	'	<div class="cubee-model">'
				+	'		<select disabled="disabled"><option>** choix **<option></select> <select disabled="disabled"><option><option></select> <input disabled="disabled" type="text" placeholder=" valeur" />'
				+	'	</div>'
				+ 	'</div>'
				+ 	'<div class="t07-center">'
				//+ 		'<div class="pull-left">Nb par page<select><option></option></select></div>'
				+ 		'<div>'
				+			'<a href="#" class="rew-total"> << </a>'
				+			'<a href="#" class="rew"> < </a>'
				+			'Page <input type="text" class="nbpage" value="1"> / <span class="nbpage">1</span>'
				+			'<a href="#" class="fwd"> > </a>'
				+			'<a href="#" class="fwd-total"> >> </a>'
				+		'</div>'
				+	'</div>'
				+'</div>'
			+'</form>';
		var elem = $(html);
		var stdTableFilter1 = new stdTableFilter();	
		elem.find('.cubee-table-filter-title').append(stdTableFilter1.spanAddFilter);
		elem.find('.cubee-table-filter').append(stdTableFilter1.boutonSendFilter);
		elem.find('a').click(function(event){
			event.preventDefault();
			var hrefElem = $(this);
			if(hrefElem.hasClass('rew-total')){
				thisTable.currentPage = 1;
			}
			else if(hrefElem.hasClass('rew')){
				thisTable.currentPage = Math.max(thisTable.currentPage - 1, 1);
			}
			else if(hrefElem.hasClass('fwd')){
				thisTable.currentPage = thisTable.currentPage + 1;
			}
			var params = {
				'page-num': thisTable.currentPage
			};
			Http.sendRequest(urlGet, params, function(response){
				thisTable.append('<tr></tr>');
			});
		});
		elem.insertBefore(this);
		for(var i=0; i<htmlColumnList.length; i++){
			var href = htmlColumnList[i];
			(function(hrefElem){
				hrefElem.on('click', function(event){
					event.preventDefault();
					if(0 == hrefElem.orderby){
						hrefElem.orderby = 1;
						hrefElem.html('&utrif;');
					}
					else if(1 == hrefElem.orderby){
						hrefElem.orderby = -1;
						hrefElem.html('&dtrif;');
					}
					else if(-1 == hrefElem.orderby){
						hrefElem.orderby = 0;
						hrefElem.html('&squf;');
					}
					thisTable.orderByList[hrefElem.fieldId] = hrefElem.orderby;
					var params = {
						'page-num': thisTable.currentPage,
						'order-by': Http.buildOrderBy(thisTable.orderByList)
					};
					Http.sendRequest(urlGet, params, function(response){
						thisTable.append('<tr></tr>');
					});
				})
			})(href);
		}		
		
		var paramsIni = {
			'page-num': thisTable.currentPage
		};
		Http.sendRequest(urlGet, paramsIni, function(response){
			var jsonResult = response[jsonResultKey];
			var tBodyElem = thisTable.find('tbody').eq(0);
			tBodyElem.html('');
			for(var i=0; i<jsonResult.length; i++){
				var trElem = document.createElement('tr');
				for(var j=0; j<options.columnList.length; j++){
					var tdElem = document.createElement('td');
					$(tdElem).html('test');
					trElem.appendChild(tdElem);
				}
				tBodyElem.append(trElem);
			}
			//console.log('##jsonResult', jsonResult.length);
		});
		
		return this;
	}
	
	var myTable = new stdTable('toto', options);
	myTable.createFilter(3);
 
</script>	
	
</html>
